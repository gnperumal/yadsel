The ``core`` module
===================

Using zip file with versions class inner

This is a text file with tests about zip file versions loading. The 
goal is instantiate the Version class and call do_up() method, waiting 
a normal result, same way they is loaded from a path.

    >>> from yadsel import *

Initializing Controller:

    >>> controller = core.Controller(drivers.SQLite)

------------------------------------------

Load versions from zip file:

    >>> controller.load_versions_from_path('versions.zip')

------------------------------------------

Partial versions list test:

    >>> version = controller.version_classes[0]()
    >>> print version.partial_versions
    [<class 'yadsel_versions.version1.Tables'>, <class 'yadsel_versions.version1.Data'>]

------------------------------------------

do_up() method call:

    >>> version.do_up()

Now, the commands:

    >>> print [cmd.__class__.__name__ for cmd in version.commands]
    ['CreateTable', 'CreateTable', 'Insert']

------------------------------------------

do_down() method call:

    >>> version.do_down()

Now, the commands:

    >>> print [cmd.__class__.__name__ for cmd in version.commands]
    ['Delete', 'DropTable', 'DropTable']

